{"ast":null,"code":"import React from \"react\";\nconst SymbolOverview = props => {\n  const {\n    widgetProps,\n    widgetPropsAny\n  } = props;\n  let containerId = \"symbol-overview-widget-container\";\n  if (widgetProps === null || widgetProps === void 0 ? void 0 : widgetProps.container_id) {\n    containerId = widgetProps === null || widgetProps === void 0 ? void 0 : widgetProps.container_id;\n  }\n  const ref = React.createRef();\n  React.useEffect(() => {\n    let refValue;\n    if (ref.current) {\n      const script = document.createElement(\"script\");\n      script.src = \"https://s3.tradingview.com/tv.js\";\n      script.async = true;\n      script.onload = () => {\n        if (typeof TradingView !== \"undefined\") {\n          new TradingView.MediumWidget(Object.assign(Object.assign({\n            \"symbols\": [[\"Apple\", \"AAPL\"], [\"Google\", \"GOOGL\"], [\"Microsoft\", \"MSFT\"]],\n            \"chartOnly\": false,\n            \"width\": \"100%\",\n            \"height\": 400,\n            \"locale\": \"en\",\n            \"colorTheme\": \"dark\",\n            \"gridLineColor\": \"#2A2E39\",\n            \"trendLineColor\": \"#1976D2\",\n            \"fontColor\": \"#787B86\",\n            \"underLineColor\": \"rgba(55, 166, 239, 0.15)\",\n            \"isTransparent\": false,\n            \"autosize\": false,\n            \"container_id\": containerId\n          }, widgetProps), widgetPropsAny));\n        }\n      };\n      ref.current.appendChild(script);\n      refValue = ref.current;\n    }\n    return () => {\n      if (refValue) {\n        while (refValue.firstChild) {\n          refValue.removeChild(refValue.firstChild);\n        }\n      }\n    };\n  }, [ref, widgetProps, widgetPropsAny, containerId]);\n  return React.createElement(\"div\", {\n    id: containerId,\n    ref: ref\n  });\n};\nexport default SymbolOverview;","map":{"version":3,"names":["React","SymbolOverview","props","widgetProps","widgetPropsAny","containerId","container_id","ref","createRef","useEffect","refValue","current","script","document","createElement","src","async","onload","TradingView","MediumWidget","Object","assign","appendChild","firstChild","removeChild","id"],"sources":["/Users/bdedafoe/Desktop/API_Views/react_examples/node_modules/react-tradingview-embed/dist/components/SymbolOverview.js"],"sourcesContent":["import React from \"react\";\r\nconst SymbolOverview = (props) => {\r\n    const { widgetProps, widgetPropsAny } = props;\r\n    let containerId = \"symbol-overview-widget-container\";\r\n    if (widgetProps === null || widgetProps === void 0 ? void 0 : widgetProps.container_id) {\r\n        containerId = widgetProps === null || widgetProps === void 0 ? void 0 : widgetProps.container_id;\r\n    }\r\n    const ref = React.createRef();\r\n    React.useEffect(() => {\r\n        let refValue;\r\n        if (ref.current) {\r\n            const script = document.createElement(\"script\");\r\n            script.src = \"https://s3.tradingview.com/tv.js\";\r\n            script.async = true;\r\n            script.onload = () => {\r\n                if (typeof TradingView !== \"undefined\") {\r\n                    new TradingView.MediumWidget(Object.assign(Object.assign({ \"symbols\": [\r\n                            [\r\n                                \"Apple\",\r\n                                \"AAPL\"\r\n                            ],\r\n                            [\r\n                                \"Google\",\r\n                                \"GOOGL\"\r\n                            ],\r\n                            [\r\n                                \"Microsoft\",\r\n                                \"MSFT\"\r\n                            ]\r\n                        ], \"chartOnly\": false, \"width\": \"100%\", \"height\": 400, \"locale\": \"en\", \"colorTheme\": \"dark\", \"gridLineColor\": \"#2A2E39\", \"trendLineColor\": \"#1976D2\", \"fontColor\": \"#787B86\", \"underLineColor\": \"rgba(55, 166, 239, 0.15)\", \"isTransparent\": false, \"autosize\": false, \"container_id\": containerId }, widgetProps), widgetPropsAny));\r\n                }\r\n            };\r\n            ref.current.appendChild(script);\r\n            refValue = ref.current;\r\n        }\r\n        return () => {\r\n            if (refValue) {\r\n                while (refValue.firstChild) {\r\n                    refValue.removeChild(refValue.firstChild);\r\n                }\r\n            }\r\n        };\r\n    }, [ref, widgetProps, widgetPropsAny, containerId]);\r\n    return React.createElement(\"div\", { id: containerId, ref: ref });\r\n};\r\nexport default SymbolOverview;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAC9B,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGF,KAAK;EAC7C,IAAIG,WAAW,GAAG,kCAAkC;EACpD,IAAIF,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACG,YAAY,EAAE;IACpFD,WAAW,GAAGF,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACG,YAAY;EACpG;EACA,MAAMC,GAAG,GAAGP,KAAK,CAACQ,SAAS,EAAE;EAC7BR,KAAK,CAACS,SAAS,CAAC,MAAM;IAClB,IAAIC,QAAQ;IACZ,IAAIH,GAAG,CAACI,OAAO,EAAE;MACb,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,GAAG,GAAG,kCAAkC;MAC/CH,MAAM,CAACI,KAAK,GAAG,IAAI;MACnBJ,MAAM,CAACK,MAAM,GAAG,MAAM;QAClB,IAAI,OAAOC,WAAW,KAAK,WAAW,EAAE;UACpC,IAAIA,WAAW,CAACC,YAAY,CAACC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC;YAAE,SAAS,EAAE,CAC9D,CACI,OAAO,EACP,MAAM,CACT,EACD,CACI,QAAQ,EACR,OAAO,CACV,EACD,CACI,WAAW,EACX,MAAM,CACT,CACJ;YAAE,WAAW,EAAE,KAAK;YAAE,OAAO,EAAE,MAAM;YAAE,QAAQ,EAAE,GAAG;YAAE,QAAQ,EAAE,IAAI;YAAE,YAAY,EAAE,MAAM;YAAE,eAAe,EAAE,SAAS;YAAE,gBAAgB,EAAE,SAAS;YAAE,WAAW,EAAE,SAAS;YAAE,gBAAgB,EAAE,0BAA0B;YAAE,eAAe,EAAE,KAAK;YAAE,UAAU,EAAE,KAAK;YAAE,cAAc,EAAEhB;UAAY,CAAC,EAAEF,WAAW,CAAC,EAAEC,cAAc,CAAC,CAAC;QAC5U;MACJ,CAAC;MACDG,GAAG,CAACI,OAAO,CAACW,WAAW,CAACV,MAAM,CAAC;MAC/BF,QAAQ,GAAGH,GAAG,CAACI,OAAO;IAC1B;IACA,OAAO,MAAM;MACT,IAAID,QAAQ,EAAE;QACV,OAAOA,QAAQ,CAACa,UAAU,EAAE;UACxBb,QAAQ,CAACc,WAAW,CAACd,QAAQ,CAACa,UAAU,CAAC;QAC7C;MACJ;IACJ,CAAC;EACL,CAAC,EAAE,CAAChB,GAAG,EAAEJ,WAAW,EAAEC,cAAc,EAAEC,WAAW,CAAC,CAAC;EACnD,OAAOL,KAAK,CAACc,aAAa,CAAC,KAAK,EAAE;IAAEW,EAAE,EAAEpB,WAAW;IAAEE,GAAG,EAAEA;EAAI,CAAC,CAAC;AACpE,CAAC;AACD,eAAeN,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}