{"ast":null,"code":"import React from \"react\";\nconst CompanyProfile = props => {\n  const {\n    widgetProps,\n    widgetPropsAny\n  } = props;\n  const ref = React.createRef();\n  React.useEffect(() => {\n    let refValue;\n    if (ref.current) {\n      const script = document.createElement(\"script\");\n      script.src = \"https://s3.tradingview.com/external-embedding/\" + \"embed-widget-symbol-profile.js\";\n      script.async = true;\n      script.type = \"text/javascript\";\n      script.innerHTML = JSON.stringify(Object.assign(Object.assign({\n        \"symbol\": \"NASDAQ:NVDA\",\n        \"width\": 480,\n        \"height\": 650,\n        \"colorTheme\": \"dark\",\n        \"isTransparent\": false,\n        \"locale\": \"en\"\n      }, widgetProps), widgetPropsAny));\n      ref.current.appendChild(script);\n      refValue = ref.current;\n    }\n    return () => {\n      if (refValue) {\n        while (refValue.firstChild) {\n          refValue.removeChild(refValue.firstChild);\n        }\n      }\n    };\n  }, [ref, widgetProps, widgetPropsAny]);\n  return React.createElement(\"div\", {\n    ref: ref\n  });\n};\nexport default CompanyProfile;","map":{"version":3,"names":["React","CompanyProfile","props","widgetProps","widgetPropsAny","ref","createRef","useEffect","refValue","current","script","document","createElement","src","async","type","innerHTML","JSON","stringify","Object","assign","appendChild","firstChild","removeChild"],"sources":["/Users/bdedafoe/Desktop/API_Views/react_examples/node_modules/react-tradingview-embed/dist/components/CompanyProfile.js"],"sourcesContent":["import React from \"react\";\r\nconst CompanyProfile = (props) => {\r\n    const { widgetProps, widgetPropsAny } = props;\r\n    const ref = React.createRef();\r\n    React.useEffect(() => {\r\n        let refValue;\r\n        if (ref.current) {\r\n            const script = document.createElement(\"script\");\r\n            script.src = \"https://s3.tradingview.com/external-embedding/\"\r\n                + \"embed-widget-symbol-profile.js\";\r\n            script.async = true;\r\n            script.type = \"text/javascript\";\r\n            script.innerHTML = JSON.stringify(Object.assign(Object.assign({ \"symbol\": \"NASDAQ:NVDA\", \"width\": 480, \"height\": 650, \"colorTheme\": \"dark\", \"isTransparent\": false, \"locale\": \"en\" }, widgetProps), widgetPropsAny));\r\n            ref.current.appendChild(script);\r\n            refValue = ref.current;\r\n        }\r\n        return () => {\r\n            if (refValue) {\r\n                while (refValue.firstChild) {\r\n                    refValue.removeChild(refValue.firstChild);\r\n                }\r\n            }\r\n        };\r\n    }, [ref, widgetProps, widgetPropsAny]);\r\n    return React.createElement(\"div\", { ref: ref });\r\n};\r\nexport default CompanyProfile;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAC9B,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGF,KAAK;EAC7C,MAAMG,GAAG,GAAGL,KAAK,CAACM,SAAS,EAAE;EAC7BN,KAAK,CAACO,SAAS,CAAC,MAAM;IAClB,IAAIC,QAAQ;IACZ,IAAIH,GAAG,CAACI,OAAO,EAAE;MACb,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/CF,MAAM,CAACG,GAAG,GAAG,gDAAgD,GACvD,gCAAgC;MACtCH,MAAM,CAACI,KAAK,GAAG,IAAI;MACnBJ,MAAM,CAACK,IAAI,GAAG,iBAAiB;MAC/BL,MAAM,CAACM,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC;QAAE,QAAQ,EAAE,aAAa;QAAE,OAAO,EAAE,GAAG;QAAE,QAAQ,EAAE,GAAG;QAAE,YAAY,EAAE,MAAM;QAAE,eAAe,EAAE,KAAK;QAAE,QAAQ,EAAE;MAAK,CAAC,EAAEjB,WAAW,CAAC,EAAEC,cAAc,CAAC,CAAC;MACpNC,GAAG,CAACI,OAAO,CAACY,WAAW,CAACX,MAAM,CAAC;MAC/BF,QAAQ,GAAGH,GAAG,CAACI,OAAO;IAC1B;IACA,OAAO,MAAM;MACT,IAAID,QAAQ,EAAE;QACV,OAAOA,QAAQ,CAACc,UAAU,EAAE;UACxBd,QAAQ,CAACe,WAAW,CAACf,QAAQ,CAACc,UAAU,CAAC;QAC7C;MACJ;IACJ,CAAC;EACL,CAAC,EAAE,CAACjB,GAAG,EAAEF,WAAW,EAAEC,cAAc,CAAC,CAAC;EACtC,OAAOJ,KAAK,CAACY,aAAa,CAAC,KAAK,EAAE;IAAEP,GAAG,EAAEA;EAAI,CAAC,CAAC;AACnD,CAAC;AACD,eAAeJ,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}